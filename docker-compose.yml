services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana-crypto
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning/datasource:/etc/grafana/provisioning/datasource
    depends_on:
      - prometheus

  prefect-server:
    image: prefecthq/prefect:2-python3.11
    container_name: prefect-server
    hostname: prefect-server
    ports:
      - "4200:4200"
    command: prefect server start
    restart: always

  # The Prefect agent is your ONE application container
  prefect-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prefect-agent
    hostname: prefect-agent
    command: sh -c "sleep 10 && prefect worker start --pool default-agent-pool"
    volumes:
      - .:/app
    environment:
      - PREFECT_API_URL=http://prefect-server:4200
    depends_on:
      - prefect-server
      - kafka
      - postgres


    restart: always

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: