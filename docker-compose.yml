version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9101:9101" # JMX Exporter for Kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_JMX_PORT=9101
      - KAFKA_JMX_HOSTNAME=localhost

  postgres:
    image: postgres:15
    container_name: prefect-postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=prefect
      - POSTGRES_PASSWORD=prefect
      - POSTGRES_DB=prefect
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: .
    container_name: fastapi
    hostname: fastapi
    command: uvicorn fast_api:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
      - "9108:9108"
    env_file:
      - .env
    depends_on:
      - postgres
      - kafka
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_SERVERS=kafka:29092
      - API_PROMETHEUS_PORT=9108

  prefect-server:
    build:
      context: .
      dockerfile: Dockerfile.prefect-server
    container_name: prefect-server
    hostname: prefect-server
    ports:
      - "4200:4200"
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:prefect@postgres:5432/prefect
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_SERVER_API_PORT=4200
      - PREFECT_UI_API_URL=http://127.0.0.1:4200/api
    command: prefect server start --host 0.0.0.0
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  # Dedicated worker for the producers flow
  producers_flow_worker:
    build: .
    container_name: producers_flow_worker
    hostname: producers_flow_worker
    command: ["prefect", "worker", "start", "-p", "default-docker-pool", "-q", "producers"]
    ports:
      - "9102:9102"
      - "9103:9103"
      - "9106:9106"
    env_file:
      - .env
    environment:
      - KAFKA_SERVERS=kafka:29092
      - METRICS_PORT_PRODUCER=9102
      - METRICS_PORT_NEWS_INGEST=9103
      - PROMETHEUS_PORT=9106
      - PREFECT_API_URL=http://prefect-server:4200/api

  # Dedicated worker for the storers flow
  storers_flow_worker:
    build: .
    container_name: storers_flow_worker
    hostname: storers_flow_worker
    command: ["prefect", "worker", "start", "-p", "default-docker-pool", "-q", "storers"]
    ports:
      - "9104:9104"
      - "9109:9109"
      - "9110:9110"
    env_file:
      - .env
    environment:
      - KAFKA_SERVERS=kafka:29092
      - DATABASE_URL=postgresql://${DB_USER:-user}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-db}
      - PROMETHEUS_PORT=9104
      - PROMETHEUS_PORT_SENTIMENT=9109
      - PROMETHEUS_PORT_ONCHAIN=9110
      - PREFECT_API_URL=http://prefect-server:4200/api

  # Dedicated worker for the processors flow
  processors_flow_worker:
    build: .
    container_name: processors_flow_worker
    hostname: processors_flow_worker
    command: ["prefect", "worker", "start", "-p", "default-docker-pool", "-q", "processors"]
    ports:
      - "9105:9105"
    env_file:
      - .env
    environment:
      - KAFKA_SERVERS=kafka:29092
      - METRICS_PORT_SENTIMENT_SCORER=9105
      - PREFECT_API_URL=http://prefect-server:4200/api

  # Dedicated worker for the anomaly flow
  anomaly_flow_worker:
    build: .
    container_name: anomaly_flow_worker
    hostname: anomaly_flow_worker
    command: ["prefect", "worker", "start", "-p", "default-docker-pool", "-q", "anomaly"]
    ports:
      - "9107:9107"
    env_file:
      - .env
    environment:
      - KAFKA_SERVERS=kafka:29092
      - ANOMALY_PROMETHEUS_PORT=9107
      - PREFECT_API_URL=http://prefect-server:4200/api

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus-crypto
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - fastapi
      - producers_flow_worker
      - storers_flow_worker
      - processors_flow_worker
      - anomaly_flow_worker

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana-crypto
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning/datasource:/etc/grafana/provisioning/datasource
    depends_on:
      - prometheus

volumes:
  postgres_data:
  grafana_data: